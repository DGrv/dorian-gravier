library(rgdal)
# temp <- data.table(read.csv("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/austria.csv"))
# temp <- temp[gpx != "gpx"]
# temp[gpx %like% "epinal"]
# temp <- unique(temp)
# temp <- temp[order(country)]
# temp[, ID := 1:.N, country]
# temp[, code := paste0("curl -o C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx/", country, "_", ID, ".gpx ", gpx)]
# temp
# writeLines(temp$code, "C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/Download_gpx.bat")
ff <- data.table(filepath =list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx", full.names = T, pattern = "gpx"))
# ff <- data.table(filepath =list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx", full.names = T, pattern = "austria"))
ff[, filename := basename(filepath)]
ff[, country := tstrsplit(filename, "_")[[1]]]
ff[, .N, country]
# for(j in 1:length(ff$filepath)) {
#
#   cat(j, "/", length(ff$filepath), "\n")
#
#   data <- data.table(readGPX(ff$filepath[j])$waypoints)
#   data
#   data <- data[lon != "NA"]
#   data[, coord := paste0(lon, lat)]
#   data
#   if(nrow(data) > 1){
#     for(i in 2:nrow(data)) {
#       if( data[i]$coord == data[1]$coord ) {
#         data[i, lat := data[i-1]$lat]
#         data[i, lon := data[i-1]$lon]
#       }
#     }
#   }
#   data
#   data[, name:= gsub(" )", ")", name)]
#   data[, name:= gsub("^ *| *$", "", name)]
#   data2 <- unique(data[, .(lon, lat)])
#   for(i in 1:nrow(data2)) {
#     data2[i, desc := paste0(data[lon == data2[i]$lon & lat == data2[i]$lat]$name, collapse = "\n")]
#   }
#   data2[, name := tstrsplit(desc, "\n", fill = "")[1]]
#   data2
#   write.csv(data2, paste0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx_converted/", gsub("gpx", "csv",ff$filename[j], )))
#
#
# }
lc <- u(ff$country)
lc
for(i in seq_along(lc)) {
all2 <-  rbindlist(lapply(list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx_converted", full.names = T, pattern = lc[i]), function(file) {
dt = fread(file, fill = T)
# further processing/filtering
}))
all2 <- u(all2)
all2[, V1 := NULL]
str(all2)
all2[, lon := as.numeric(lon)]
all2[, lat := as.numeric(lat)]
latslongs <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(desc, name)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), ".gpx")
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
latslongs2 <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(name)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), "_QGIS.gpx")
writeOGR(latslongs2, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
rm(all2)
}
# conver <- data.table(x = readLines(newfile))
# # conver <- conver[grep("extension", x, invert = T)]
# conver[, x := gsub("\\<ogr:url>", "<url>", x)]
# conver[, x := gsub("\\<\\/ogr:url>", "</url>", x)]
# write.table(conver$x, newfile, quote = F, row.names = F, col.names = F)
for(i in seq_along(lc)) {
all2 <-  rbindlist(lapply(list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx_converted", full.names = T, pattern = lc[i]), function(file) {
dt = fread(file, fill = T)
# further processing/filtering
}))
all2 <- u(all2)
all2[, V1 := NULL]
str(all2)
all2[, lon := as.numeric(lon)]
all2[, lat := as.numeric(lat)]
latslongs <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(desc, name)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), ".gpx")
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
latslongs2 <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(name)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), "_QGIS.gpx")
writeOGR(latslongs2, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
rm(all2)
}
library("stringi")
library("jsonlite")
# library("rjson")
library("data.table")
library(httr)
library(rgdal)
text <- content(GET("https://wwoof.fr/api/host-coordinates?searchTerm=&approvalStatus=approved&activities=&lodgings=&membershipStatus=active&isSuspended=false&isHidden=false&regionId=&capacity=1&childrenOk=false&petsOk=false&favoritesOnly=false&isNew=false&diets=&languages=&certifiedOrganic=false&type=&methodologies=&limit=5000"), as = "text", encoding = "UTF-8")
result <- fromJSON(text)
result
all <- as.data.table(result$features)
all[, lat := as.numeric(gsub("c\\(", "", gsub("(.*),(.*)", "\\1", geometry.coordinates)))]
all[, lon := as.numeric(gsub("\\)", "", gsub("(.*),(.*)", "\\2", geometry.coordinates)))]
all[, url := paste0("https://wwoof.fr/de/host/", properties.hostId)]
all
all <- all[(lat > -4.5 & lat < 10) & (lon < 51 & lon > 40 )]
all <- all[, .(name = properties.farmName, desc = properties.shortDescription, url, lat, lon)]
lschoice <- c("84", "6829", "11316", "9767", "10288", "1907", "10263", "7199", "92", "8096", "822", "5024", "4146", "6720", "13945", "7809", "3540", "5833", "5923")
all[grep(paste0("host/", lschoice, "$", collapse = "|"), url), choice := 1]
all[choice == 1]
all2 <- copy(all)
all2[, lat := NULL]
all2[, lon:= NULL]
# choice
latslongs <- SpatialPointsDataFrame(coords=all[choice == 1, .(lat, lon)], data=all2[choice == 1], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/gpx/202206_Wwoof_France_choice.gpx"
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
data <- data.table(x = readLines(newfile))
data <- data[grep("extension", x, invert = T)]
data[, x := gsub("ogr:url", "url", x)]
data[, x := gsub(" \\<url", " <url", x)]
data
write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
#
#
# # all
#     latslongs <- SpatialPointsDataFrame(coords=all[, .(lat, lon)], data=all2, proj4string =CRS("+proj=longlat + ellps=WGS84"))
#
#     newfile <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/gpx/202206_Wwoof_France.gpx"
#     writeOGR(latslongs, dsn=newfile,
#              dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
#
#     data <- data.table(x = readLines(newfile))
#     data <- data[grep("extension", x, invert = T)]
#     data[, x := gsub("ogr:url", "url", x)]
#     data[, x := gsub(" \\<url", " <url", x)]
#     data
#     write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
library("stringi")
library("jsonlite")
# library("rjson")
library("data.table")
library(httr)
library(rgdal)
text <- content(GET("https://wwoof.fr/api/host-coordinates?searchTerm=&approvalStatus=approved&activities=&lodgings=&membershipStatus=active&isSuspended=false&isHidden=false&regionId=&capacity=1&childrenOk=false&petsOk=false&favoritesOnly=false&isNew=false&diets=&languages=&certifiedOrganic=false&type=&methodologies=&limit=5000"), as = "text", encoding = "UTF-8")
result <- fromJSON(text)
result
all <- as.data.table(result$features)
all[, lat := as.numeric(gsub("c\\(", "", gsub("(.*),(.*)", "\\1", geometry.coordinates)))]
all[, lon := as.numeric(gsub("\\)", "", gsub("(.*),(.*)", "\\2", geometry.coordinates)))]
all[, url := paste0("https://wwoof.fr/de/host/", properties.hostId)]
all
all <- all[(lat > -4.5 & lat < 10) & (lon < 51 & lon > 40 )]
all <- all[, .(name = properties.farmName, desc = properties.shortDescription, url, lat, lon)]
lschoice <- c("84", "6829", "11316", "9767", "10288", "1907", "10263", "7199", "92", "8096", "822", "5024", "4146", "6720", "13945", "7809", "3540", "5833", "5923", "7275", "7467", "7818")
all[grep(paste0("host/", lschoice, "$", collapse = "|"), url), choice := 1]
all[choice == 1]
all2 <- copy(all)
all2[, lat := NULL]
all2[, lon:= NULL]
# choice
latslongs <- SpatialPointsDataFrame(coords=all[choice == 1, .(lat, lon)], data=all2[choice == 1], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/gpx/202206_Wwoof_France_choice.gpx"
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
data <- data.table(x = readLines(newfile))
data <- data[grep("extension", x, invert = T)]
data[, x := gsub("ogr:url", "url", x)]
data[, x := gsub(" \\<url", " <url", x)]
data
write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
#
#
# # all
#     latslongs <- SpatialPointsDataFrame(coords=all[, .(lat, lon)], data=all2, proj4string =CRS("+proj=longlat + ellps=WGS84"))
#
#     newfile <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/gpx/202206_Wwoof_France.gpx"
#     writeOGR(latslongs, dsn=newfile,
#              dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
#
#     data <- data.table(x = readLines(newfile))
#     data <- data[grep("extension", x, invert = T)]
#     data[, x := gsub("ogr:url", "url", x)]
#     data[, x := gsub(" \\<url", " <url", x)]
#     data
#     write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
library("stringi")
library("jsonlite")
# library("rjson")
library("data.table")
library(httr)
library(rgdal)
text <- content(GET("https://wwoof.fr/api/host-coordinates?searchTerm=&approvalStatus=approved&activities=&lodgings=&membershipStatus=active&isSuspended=false&isHidden=false&regionId=&capacity=1&childrenOk=false&petsOk=false&favoritesOnly=false&isNew=false&diets=&languages=&certifiedOrganic=false&type=&methodologies=&limit=5000"), as = "text", encoding = "UTF-8")
result <- fromJSON(text)
result
all <- as.data.table(result$features)
all[, lat := as.numeric(gsub("c\\(", "", gsub("(.*),(.*)", "\\1", geometry.coordinates)))]
all[, lon := as.numeric(gsub("\\)", "", gsub("(.*),(.*)", "\\2", geometry.coordinates)))]
all[, url := paste0("https://wwoof.fr/de/host/", properties.hostId)]
all
all <- all[(lat > -4.5 & lat < 10) & (lon < 51 & lon > 40 )]
all <- all[, .(name = properties.farmName, desc = properties.shortDescription, url, lat, lon)]
lschoice <- c("84", "6829", "11316", "9767", "10288", "1907", "10263", "7199", "92", "8096", "822", "5024", "4146", "6720", "13945", "7809", "3540", "5833", "5923", "7275", "7467", "7818")
all[grep(paste0("host/", lschoice, "$", collapse = "|"), url), choice := 1]
all[choice == 1]
all2 <- copy(all)
all2[, lat := NULL]
all2[, lon:= NULL]
# choice
latslongs <- SpatialPointsDataFrame(coords=all[choice == 1, .(lat, lon)], data=all2[choice == 1], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/gpx/202206_Wwoof_France_choice.gpx"
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
data <- data.table(x = readLines(newfile))
data <- data[grep("extension", x, invert = T)]
data[, x := gsub("ogr:url", "url", x)]
data[, x := gsub(" \\<url", " <url", x)]
data
write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
#
#
# # all
#     latslongs <- SpatialPointsDataFrame(coords=all[, .(lat, lon)], data=all2, proj4string =CRS("+proj=longlat + ellps=WGS84"))
#
#     newfile <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/gpx/202206_Wwoof_France.gpx"
#     writeOGR(latslongs, dsn=newfile,
#              dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
#
#     data <- data.table(x = readLines(newfile))
#     data <- data[grep("extension", x, invert = T)]
#     data[, x := gsub("ogr:url", "url", x)]
#     data[, x := gsub(" \\<url", " <url", x)]
#     data
#     write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
# setup
rm(list = ls())
if( paste0(Sys.info()[4]) == 'DESKTOP-MG495PG' ) {
rootpath <- 'C:/Users/doria/Dropbox/Shared_Dorian/'
Sys.setlocale('LC_ALL', 'German')
} else {
if( paste0(Sys.info()[4]) == 'DORIANSRECHNER' ) {
rootpath <- 'file:///C:/Users/dorian.BSPM/Dropbox/Shared_Dorian/'
} else {
rootpath <- 'file:///C:/Users/buero.BSPM/Dropbox/Shared_Dorian/'
}
}
source(paste0(rootpath, "Dorian/BM_Function_v01.r"), encoding="utf-8")
library(plotKML)
library(rgdal)
ff <- data.table(filepath =list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx", full.names = T, pattern = "gpx"))
# ff <- data.table(filepath =list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx", full.names = T, pattern = "austria"))
ff[, filename := basename(filepath)]
ff[, country := tstrsplit(filename, "_")[[1]]]
ff[, .N, country]
lc <- u(ff$country)
lc
i=2
lf <- list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx_converted", full.names = T, pattern = lc[i])
all2 <-  rbindlist(lapply(lf, function(file) {
dt = fread(file, fill = T)
# further processing/filtering
}))
all2 <- u(all2)
all2 <- all2[!is.na(lat)]
all2 <- all2[!is.na(lon)]
all2[, V1 := NULL]
str(all2)
all2[, lon := as.numeric(lon)]
all2[, lat := as.numeric(lat)]
setnames(all2, "link", "url")
latslongs <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(desc, name, url)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
all2 <- all2[!is.na(lat)]
all2 <- all2[!is.na(lon)]
setnames(all2, "link", "url")
latslongs <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(desc, name, url)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
str(all2)
latslongs <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(desc, name, url)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), ".gpx")
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
data <- data.table(x = readLines(newfile))
data <- data[grep("extension", x, invert = T)]
data[, x := gsub("ogr:url", "url", x)]
data[, x := gsub(" \\<url", " <url", x)]
data
write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
latslongs2 <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(name)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), "_QGIS.gpx")
writeOGR(latslongs2, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
rm(all2)
cat("Done")
for(i in seq_along(lc)) {
lf <- list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx_converted", full.names = T, pattern = lc[i])
# lf[7891]
# fread(lf[7891])
all2 <-  rbindlist(lapply(lf, function(file) {
dt = fread(file, fill = T)
# further processing/filtering
}))
all2 <- u(all2)
all2[, V1 := NULL]
# str(all2)
all2[, lon := as.numeric(lon)]
all2[, lat := as.numeric(lat)]
all2 <- all2[!is.na(lat)]
all2 <- all2[!is.na(lon)]
setnames(all2, "link", "url")
latslongs <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(desc, name, url)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), ".gpx")
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
data <- data.table(x = readLines(newfile))
data <- data[grep("extension", x, invert = T)]
data[, x := gsub("ogr:url", "url", x)]
data[, x := gsub(" \\<url", " <url", x)]
write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
latslongs2 <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(name)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), "_QGIS.gpx")
writeOGR(latslongs2, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
rm(all2)
cat("Done")
}
lc
i=5
cat("Start Country:", lc[i])
lf <- list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx_converted", full.names = T, pattern = lc[i])
all2 <-  rbindlist(lapply(lf, function(file) {
dt = fread(file, fill = T)
# further processing/filtering
}))
all2 <- u(all2)
all2[, V1 := NULL]
# str(all2)
all2[, lon := as.numeric(lon)]
all2[, lat := as.numeric(lat)]
all2 <- all2[!is.na(lat)]
all2 <- all2[!is.na(lon)]
setnames(all2, "link", "url")
all2
all2[order(name)]
all2[order(name, url)]
all2[, .SD[1], .(name, url)]
all2[, .SD[1], .(name)]
all <- copy(all2)
all[,url := NULL]
u(all)
all2[, .SD[1], .(name, lat, lon)]
all2[, .SD[1], .(name, lat, lon, desc)]
u(all)
u(all)[order(name)]
u(all)[, .N, name]
u(all)[, .N, name][N ==2]
all[name %in% all[, .N, name][N ==2]$name]
all <- u(all)
all[, .N, name][N ==2]
all[name %in% all[, .N, name][N ==2]$name]
all[name %in% all[, .N, name][N ==2]$name][order(name)]
all2 <-  rbindlist(lapply(lf, function(file) {
dt = fread(file, fill = T)
# further processing/filtering
}))
all2BU <-  copy(all2)
all2[desc == ""]
all2[, .I[nch == max(nch)], .(name, lat, lon)]
all2[, nch := nchar(desc)]
all2[, .I[nch == max(nch)], .(name, lat, lon)]
all2BU <-  copy(all2)
all2 <- all2[all2[, .I[nch == max(nch)], .(name, lat, lon)]$V1]
all2[, nch := nchar(desc)]
all2
all2[, nch := nchar(desc)]
all2
all2 <- all2[all2[, .I[nch == max(nch)], .(name, lat, lon)]$V1]
all2 <- u(all2)
all2[, V1 := NULL]
# str(all2)
all2[, lon := as.numeric(lon)]
all2[, lat := as.numeric(lat)]
all2 <- all2[!is.na(lat)]
all2 <- all2[!is.na(lon)]
setnames(all2, "link", "url")
all2 <- all2[order(name, url)]
all2[, .SD[1], .(name, lat, lon, desc)]
for(i in seq_along(lc)) {
cat("Start Country:", lc[i])
lf <- list.files("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/gpx_converted", full.names = T, pattern = lc[i])
# lf[7891]
# fread(lf[7891])
all2 <-  rbindlist(lapply(lf, function(file) {
dt = fread(file, fill = TRUE)
# further processing/filtering
}))
all2BU <-  copy(all2)
all2[, nch := nchar(desc)]
all2
all2 <- all2[all2[, .I[nch == max(nch)], .(name, lat, lon)]$V1]
all2 <- u(all2)
all2[, V1 := NULL]
# str(all2)
all2[, lon := as.numeric(lon)]
all2[, lat := as.numeric(lat)]
all2 <- all2[!is.na(lat)]
all2 <- all2[!is.na(lon)]
setnames(all2, "link", "url")
all2 <- all2[order(name, url)]
all2 <- all2[, .SD[1], .(name, lat, lon, desc)]
latslongs <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(desc, name, url)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), ".gpx")
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
data <- data.table(x = readLines(newfile))
data <- data[grep("extension", x, invert = T)]
data[, x := gsub("ogr:url", "url", x)]
data[, x := gsub(" \\<url", " <url", x)]
write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
latslongs2 <- SpatialPointsDataFrame(coords=all2[, .(lon, lat)], data=all2[, .(name)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- p0("C:/Users/doria/Downloads/Outdoor/Topo/thecrag/thecrag/", str_to_title(lc[i]), "_QGIS.gpx")
writeOGR(latslongs2, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T, )
rm(all2)
cat("Done")
}
# Setup ----------------------------------------------------------------
library(data.table)
wd <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files"
outjs <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/js/Personal/gpx_biketrip2022.js"
if( !dir.exists(wd) ) {
wd <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files"
outjs <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/js/Personal/gpx_biketrip2022.js"
}
setwd(wd)
# get data ----------------------------------------------------------------
lis <- data.table(path = list.files(wd, pattern = "\\.gpx", full = T, recursive = T))
lis <- lis[!path %like% "gpx.reg"]
lis <- lis[!path %like% "_site"]
lis <- lis[path %like% "Bike_trip_2022"]
lis[, path2 := gsub(paste0(dirname(wd), "/"), "", path) ]
lis[, dir := dirname(path2) ]
lisdir <- unique(lis$dir)
lisdir
# output ------------------------------------------------------------------
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
library(plotKML)
library(ggplot2)
library(maps)
library(geosphere)
# GPX files downloaded from Runkeeper
files <- lis$path
# Consolidate routes in one drata frame
all <- data.table()
for (i in 1:length(files)) {
route <- data.table(readGPX(files[i])$tracks[[1]][[1]])
route[, file := files[i]]
route[, dist := 0]
route[2:nrow(route), dist := distHaversine(route[,.(lon, lat)])]
all <- rbind(all, route)
}
sum(all$dist, na.rm = T)/1000
all[, distfs := 0]
all[, distfs := dist+shift(distfs, n=-1)]
all[, distfs := rowSums(.SD), .SD=dist]
all[, distfs := Reduce('+', shift(dist)]
all[, distfs := Reduce('+', shift(dist))]
all[, distfs := 0]
all[, distfs := Reduce('+', shift(dist))]
all
all[, distfs := Reduce(`+`, shift(dist))]
all
all[, distfs := Reduce(`+`, shift(dist, n=-1))]
all
all[is.na(dist)]
all[, distfs := Reduce(`+`, shift(dist))]
all
all[, distfs := Reduce(`+`, shift(dist)), by=file]
all
all[, distfs := rollapplyr(dist, 1, sum)]
all[, distfs := rollapply(dist, 1, sum)]
all[, distfs := rollasum(dist, 1)]
all[, distfs := rollsum(dist, 1)]
library(dplyr)
all[, distfs := rollsum(dist, 1)]
library(roll)
install.packages("roll")
all[, distfs := roll_sum(dist, 1)]
library(roll)
all[, distfs := roll_sum(dist, 1)]
all
all[, distfs := roll_sum(dist, 2)]
all
