after <- dbK[,.(EAN, Ø.Netto.EK, UVP, Artikelname, Lagerbestand..gesamt.)]
read.DB(p0(rootpath, "/Firmen_Listen_EAN/Export/Artikelliste_2021_07_11_18_06_03_Deuter_vor_import.csv"))
before <- dbK[,.(EAN, Ø.Netto.EK, UVP, Artikelname, Lagerbestand..gesamt.)]
setnames(before , names(before), p0(names(before), ".old"))
setnames(before , "EAN.old", "EAN")
new <- dtjoin(after, before)
# check price diff
new[UVP != UVP.old]
new[, Diff := UVP - UVP.old]
hist(new$Diff)
new[Diff >20]
# check bestand diff
new[]
new[UVP != UVP.old & Lagerbestand..gesamt. != 0]
new[UVP != UVP.old & Lagerbestand..gesamt. != 0, .(EAN, Artikelname, Lagerbestand..gesamt., UVP.old, UVP)]
write.table(toprint, p0(rootpath, "/Firmen_Listen_EAN/Import/202100726_Deuter_etikette-to-change.csv"), sep=";", row.names = F)
(toprint <- new[UVP != UVP.old & Lagerbestand..gesamt. != 0, .(EAN, Artikelname, Lagerbestand..gesamt., UVP.old, UVP)])
write.table(toprint, p0(rootpath, "/Firmen_Listen_EAN/Import/202100726_Deuter_etikette-to-change.csv"), sep=";", row.names = F)
# setup
rm(list = ls())
if( paste0(Sys.info()[4]) == 'DESKTOP-MG495PG' ) {
rootpath <- 'C:/Users/doria/Dropbox/Shared_Dorian/'
datapath <- 'file:///C:/Users/doria/Dropbox/Shared_Dorian/Firmen_Listen_EAN/Listen/csv/'
Sys.setlocale('LC_ALL', 'German')
} else {
rootpath <- 'file:///C:/Users/buero.BSPM/Dropbox/Shared_Dorian/'
datapath <- 'file:///C:/Users/buero.BSPM/Dropbox/Shared_Dorian/Firmen_Listen_EAN/Listen/csv/'
}
source(paste0(rootpath, "Dorian/BM_Function_v01.r"), encoding="utf-8")
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[grep("boostic", Artikelname)]
data[grep("boostic", Artikelname)]
data[grepl("boostic", Artikelname)]
data[grepl("Boostic", Artikelname)]
data[, .N, EAN]
data[, .N, EAN.Barcode][N > 1]
data[, Hcode := substr(Artikelnummer, 1, 3)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]
dup <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]$EAN.Barcode
data[Hcode == "SCP" &  EAN.Barcode %in% dup]
dhc <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]$Hcode
data[Hcode == dhc[1] &  EAN.Barcode %in% dup]
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer
todelete <- c("SCP-70071", "SCP-30472-960")
todelete <- c(todelete ,data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer)
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[4] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[, EAN.Barcode := as.character(format(EAN.Barcode, scientific = F))]
data[Hcode == dhc[4] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[, EAN.Barcode := as.character(format(EAN.Barcode, scientific = F))]
data
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[, EAN.Barcode := as.character(format(EAN.Barcode, scientific = F, digits = 0))]
data
data[Hcode == dhc[4] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# setup
rm(list = ls())
if( paste0(Sys.info()[4]) == 'DESKTOP-MG495PG' ) {
rootpath <- 'C:/Users/doria/Dropbox/Shared_Dorian/'
datapath <- 'file:///C:/Users/doria/Dropbox/Shared_Dorian/Firmen_Listen_EAN/Listen/csv/'
Sys.setlocale('LC_ALL', 'German')
} else {
rootpath <- 'file:///C:/Users/buero.BSPM/Dropbox/Shared_Dorian/'
datapath <- 'file:///C:/Users/buero.BSPM/Dropbox/Shared_Dorian/Firmen_Listen_EAN/Listen/csv/'
}
source(paste0(rootpath, "Dorian/BM_Function_v01.r"), encoding="utf-8")
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[, EAN.Barcode := as.character(format(EAN.Barcode, scientific = F, digits = 0))]
data[grepl("Boostic", Artikelname)]
data[, Hcode := substr(Artikelnummer, 1, 3)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
dup <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]$EAN.Barcode
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]
dhc <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]$Hcode
data[Hcode == "SCP" &  EAN.Barcode %in% dup][order(Artikelnummer)]
# Idea: Keep EAN, Artikelname, change Artikelnummer to update them with "-todelete".
# Update them
# check Auftrag
# Update lagerbestand from the others
data[Hcode == "SCP" &  EAN.Barcode %in% dup][order(Artikelnummer)]
todelete <- c("SCP-70071", "SCP-30472-960")
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer
todelete <- c(todelete ,data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer)
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[4] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[, EAN.Barcode := as.character(format(EAN.Barcode, scientific = F, digits = 0))]
data
data[, Hcode := substr(Artikelnummer, 1, 3)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[, EAN.Barcode := format(EAN.Barcode, scientific = F, digits = 0)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
data[, Hcode := substr(Artikelnummer, 1, 3)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[, EAN.Barcode := format(EAN.Barcode, scientific = F, digits = 0)]
data[is.na(EAN.Barcode)]
data[!is.na(EAN.Barcode)]
data[EAN.Barcode == "NA"]
str(data)
data[EAN.Barcode %like% "NA"]
data[EAN.Barcode %like% "NA", EAN.Barcode := NA]
data[is.na(EAN.Barcode)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
data[, Hcode := substr(Artikelnummer, 1, 3)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
dup <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]$EAN.Barcode
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]
dhc <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]$Hcode
data[Hcode == "SCP" &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == "SCP" &  EAN.Barcode %in% dup][order(Artikelnummer)]
todelete <- c("SCP-70071", "SCP-30472-960")
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer
todelete <- c(todelete ,data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer)
data[Hcode == dhc[4] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[5] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[6] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer
todelete <- c(todelete ,data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer)
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, Serie]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie == ""]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != ""][,.N, Serie]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode]
data[Hcode == dhc[2] &  EAN.Barcode %in% data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 3]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][!is.na(Vaterartikel.ArtNr)]$Vaterartikel.ArtNr
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr != ""]$Vaterartikel.ArtNr
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][is.na(Vaterartikel.ArtNr)]$Artikelnummer
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr == ""]$Artikelnummer
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][order(Artikelnummer)][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, Serie]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N!= 2]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 3]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
# remove them manually with strange character
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][,.N, nchar(Vaterartikel.ArtNr)]
# delete kinder
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt != 0]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != ""]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt != 0][Vaterartikel.ArtNr != "", Vaterartikel.ArtNr]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt != 0][Vaterartikel.ArtNr != "", .(Vaterartikel.ArtNr)]
# change manually the one with bestand
# rename todelete only without bestand
todelete <- c(todelete, data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != ""]$Artikelnummer)
data[Hcode == dhc[6] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[7] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[8] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[9] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[EAN.Barcode == 0]
data[EAN.Barcode == 0]
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]$EAN.Barcode
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[, EAN.Barcode := gsub(" ", "0", format(EAN.Barcode, scientific = F, digits = 0))]
data[!is.na(EAN.Barcode)]
data[is.na(EAN.Barcode)]
data[EAN.Barcode %like% "NA", EAN.Barcode := NA]
data[is.na(EAN.Barcode)]
data
data[grepl("Boostic", Artikelname)]
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]$EAN.Barcode
data[, Hcode := substr(Artikelnummer, 1, 3)]
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]$EAN.Barcode
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]$EAN.Barcode
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
dup <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]$EAN.Barcode
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]
dhc <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]$Hcode
data[Hcode == "SCP" &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]$EAN.Barcode
data[EAN.Barcode == "0000000000000"]
temp <- data[EAN.Barcode == "0000000000000"][, EAN.Barcode == ""][, .(Artikelnummer, EAN.Barcode)]
temp <- data[EAN.Barcode == "0000000000000"][, EAN.Barcode := ""][, .(Artikelnummer, EAN.Barcode)]
temp
write.csv.wawi(temp, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Ocun_remove_EAN_0.csv"))
data[Hcode == dhc[11] &  EAN.Barcode %in% dup][order(Artikelnummer)]
dhc
# setup
rm(list = ls())
if( paste0(Sys.info()[4]) == 'DESKTOP-MG495PG' ) {
rootpath <- 'C:/Users/doria/Dropbox/Shared_Dorian/'
datapath <- 'file:///C:/Users/doria/Dropbox/Shared_Dorian/Firmen_Listen_EAN/Listen/csv/'
Sys.setlocale('LC_ALL', 'German')
} else {
rootpath <- 'file:///C:/Users/buero.BSPM/Dropbox/Shared_Dorian/'
datapath <- 'file:///C:/Users/buero.BSPM/Dropbox/Shared_Dorian/Firmen_Listen_EAN/Listen/csv/'
}
source(paste0(rootpath, "Dorian/BM_Function_v01.r"), encoding="utf-8")
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[, EAN.Barcode := gsub(" ", "0", format(EAN.Barcode, scientific = F, digits = 0))]
data[!is.na(EAN.Barcode)]
data[is.na(EAN.Barcode)]
data[EAN.Barcode %like% "NA", EAN.Barcode := NA]
data[is.na(EAN.Barcode)]
data
data[grepl("Boostic", Artikelname)]
data[, Hcode := substr(Artikelnummer, 1, 3)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
dup <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]$EAN.Barcode
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]
dhc <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]$Hcode
data[Hcode == "SCP" &  EAN.Barcode %in% dup][order(Artikelnummer)]
# Idea: Keep EAN, Artikelname, change Artikelnummer to update them with "-todelete".
# Update them
# check Auftrag
# Update lagerbestand from the others
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer
todelete <- c(todelete ,data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer)
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, Serie]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie == ""]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != ""][,.N, Serie]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode
data[Hcode == dhc[2] &  EAN.Barcode %in% data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 3]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
# keep only SS22
todelete <- c(todelete, data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr != ""]$Vaterartikel.ArtNr, data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr == ""]$Artikelnummer)
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][order(Artikelnummer)][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, Serie]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N!= 2]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 3]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
# remove them manually with strange character
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][,.N, nchar(Vaterartikel.ArtNr)]
# delete kinder
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt != 0]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt != 0][Vaterartikel.ArtNr != "", .(Vaterartikel.ArtNr)]
# change manually the one with bestand
# rename todelete only without bestand
todelete <- c(todelete, data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != ""]$Artikelnummer)
data[Hcode == dhc[4] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[5] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[6] &  EAN.Barcode %in% dup][order(Artikelnummer)]
todelete <- c("SCP-70071")
# mescalito remove manually
data[Hcode == dhc[7] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[8] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[9] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]$EAN.Barcode
data[EAN.Barcode == "0000000000000"]
temp <- data[EAN.Barcode == "0000000000000"][, EAN.Barcode := ""][, .(Artikelnummer, EAN.Barcode)]
write.csv.wawi(temp, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Ocun_remove_EAN_0.csv"))
todelete
todelete <- c(data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer)
todelete
# keep only SS22
todelete <- c(todelete, data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr != ""]$Vaterartikel.ArtNr, data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr == ""]$Artikelnummer)
todelete
# change manually the one with bestand
# rename todelete only without bestand
todelete <- c(todelete, data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != ""]$Artikelnummer)
todelete
data[Artikelnummer %like% "SCP-70071"]
data[Artikelnummer %like% "SCP-70071" & Lagerbestand.Gesamt != 0]
todelete
data[Artikelnummer %in% todelete]
todelete2 <- data[Artikelnummer %in% todelete][, (Artikelnummer, Artikelname)]
todelete2 <- data[Artikelnummer %in% todelete][, (Artikelnummer, Artikelname)]
todelete2 <- data[Artikelnummer %in% todelete][, .(Artikelnummer, Artikelname)]
todelete2[, Artikelnummer := p0(Artikelnummer, "-todelete")]
write.csv.wawi(todelete2, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete.csv"))
todelete2[Artikelname %like% "tradapter"]
todelete2[Artikelname %like% "Tradapter"]
write.csv.wawi(todelete2[Artikelname %like% "Tradapter"], p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete.csv"))
todelet3 <- copy(todelete2)
todelete3[, Artikelname := p0(Artikelname, "-todelete")]
todelete2 <- data[Artikelnummer %in% todelete][, .(Artikelnummer, Artikelname)]
todelete2[, Artikelname := p0(Artikelname, "-todelete")]
todelete2[Artikelname %like% "Tradapter"]
write.csv.wawi(todelete2[Artikelname %like% "Tradapter"], p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete.csv"))
write.csv.wawi(todelete2, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete.csv"))
todelete2[Atikelname %like% "Skull Cap"]
todelete2[Artikelname %like% "Skull Cap"]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][order(Artikelnummer)][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, Serie]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N!= 2]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 3]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
# remove them manually with strange character
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][,.N, nchar(Vaterartikel.ArtNr)]
# delete kinder
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt != 0]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt != 0][Vaterartikel.ArtNr != "", .(Vaterartikel.ArtNr)]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0]
# change manually the one with bestand
# rename todelete only without bestand
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != ""]
# change manually the one with bestand
# rename todelete only without bestand
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != "", .N, EAN.Barcode]
# change manually the one with bestand
# rename todelete only without bestand
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != "", .N, EAN.Barcode][N != 1]
# change manually the one with bestand
# rename todelete only without bestand
data[EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != "", .N, EAN.Barcode][N != 1]$EAN.Barcode
# change manually the one with bestand
# rename todelete only without bestand
data[EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != "", .N, EAN.Barcode][N != 1]$EAN.Barcode]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Serie != "21S".N, EAN.Barcode][N != 1]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Serie != "21S", .N, EAN.Barcode][N != 1]
todelete2 <- data[Artikelnummer %in% todelete][, .(Artikelnummer, Artikelname)]
todelete
todelete2 <- data[Artikelnummer %in% todelete][, .(Artikelnummer, Artikelname)]
todelete2[, Artikelname := p0(Artikelname, "")]
write.csv.wawi(todelete2, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete.csv"))
# setup
rm(list = ls())
if( paste0(Sys.info()[4]) == 'DESKTOP-MG495PG' ) {
rootpath <- 'C:/Users/doria/Dropbox/Shared_Dorian/'
datapath <- 'file:///C:/Users/doria/Dropbox/Shared_Dorian/Firmen_Listen_EAN/Listen/csv/'
Sys.setlocale('LC_ALL', 'German')
} else {
rootpath <- 'file:///C:/Users/buero.BSPM/Dropbox/Shared_Dorian/'
datapath <- 'file:///C:/Users/buero.BSPM/Dropbox/Shared_Dorian/Firmen_Listen_EAN/Listen/csv/'
}
source(paste0(rootpath, "Dorian/BM_Function_v01.r"), encoding="utf-8")
# read export ameise kategorie, all article
data <- read.csv.wawi(p0(rootpath,"/Firmen_Listen_EAN/Export/JTL-Export-Artikeldaten-11082021_ALL.csv"))
data
data[, EAN.Barcode := gsub(" ", "0", format(EAN.Barcode, scientific = F, digits = 0))]
data[!is.na(EAN.Barcode)]
data[is.na(EAN.Barcode)]
data[EAN.Barcode %like% "NA", EAN.Barcode := NA]
data[is.na(EAN.Barcode)]
data
data[grepl("Boostic", Artikelname)]
data[, Hcode := substr(Artikelnummer, 1, 3)]
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]
dup <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1]$EAN.Barcode
data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]
dhc <- data[!is.na(EAN.Barcode), .N, .(Hcode, EAN.Barcode)][N > 1][, .N, Hcode]$Hcode
data[Hcode == "SCP" &  EAN.Barcode %in% dup][order(Artikelnummer)]
# Idea: Keep EAN, Artikelname, change Artikelnummer to update them with "-todelete".
# Update them
# check Auftrag
# Update lagerbestand from the others
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer
todelete <- c(data[Hcode == dhc[1] &  EAN.Barcode %in% dup][Serie == "21S"]$Artikelnummer)
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, Serie]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie == ""]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != ""][,.N, Serie]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode
data[Hcode == dhc[2] &  EAN.Barcode %in% data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[2] &  EAN.Barcode %in% data[Hcode == dhc[2] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 3]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
# keep only SS22
todelete <- c(todelete, data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr != ""]$Vaterartikel.ArtNr, data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr == ""]$Artikelnummer)
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][order(Artikelnummer)][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, Serie]
data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N!= 2]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 3]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
# remove them manually with strange character
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][,.N, nchar(Vaterartikel.ArtNr)]
# delete kinder
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt != 0]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt != 0][Vaterartikel.ArtNr != "", .(Vaterartikel.ArtNr)]
# change manually the one with bestand
# rename todelete only without bestand
# data[EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Vaterartikel.ArtNr != "", .N, EAN.Barcode][N != 1]$EAN.Barcode]
data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Serie != "21S", .N, EAN.Barcode][N != 1]
todelete <- c(todelete, data[Hcode == dhc[3] &  EAN.Barcode %in% data[Hcode == dhc[3] &  EAN.Barcode %in% dup][,.N, EAN.Barcode][N == 2]$EAN.Barcode][order(EAN.Barcode, Artikelnummer)][Lagerbestand.Gesamt == 0][Serie != "21S"]$Artikelnummer)
data[Hcode == dhc[4] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[5] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[6] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[7] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[8] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[9] &  EAN.Barcode %in% dup][order(Artikelnummer)]
# I changed them manually
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]
data[Hcode == dhc[10] &  EAN.Barcode %in% dup][order(Artikelnummer)]$EAN.Barcode
data[EAN.Barcode == "0000000000000"]
temp <- data[EAN.Barcode == "0000000000000"][, EAN.Barcode := ""][, .(Artikelnummer, EAN.Barcode)]
write.csv.wawi(temp, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Ocun_remove_EAN_0.csv"))
todelete
todelete2 <- data[Artikelnummer %in% todelete][, .(Artikelnummer, Artikelname)]
todelete2[, Artikelname := p0(Artikelname, "-todelete")]
write.csv.wawi(todelete2, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete.csv"))
todelete2[Artikelname %like% "Skull Cap"]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][order(EAN.Barcode, Artikelnummer)]
todelete2 <- data[Artikelnummer %in% todelete][, .(Artikelnummer, Artikelname)]
write.csv.wawi(todelete2, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete_reset.csv"))
data[Hcode == dhc[2] &  EAN.Barcode %in% dup]
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"]
# change few things for LSP
data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr != ""]$Artikelnummer
# change few things for LSP
todeleteb <- data[Hcode == dhc[2] &  EAN.Barcode %in% dup][Serie != "SS22"][Vaterartikel.ArtNr != ""]$Artikelnummer
todelete3 <- data[Artikelnummer %in% todeleteb][, .(Artikelnummer, Artikelname)]
todelete3[, Artikelname := p0(Artikelname, "")]
write.csv.wawi(todelete3, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete_reset.csv"))
todelete2 <- data[Artikelnummer %in% todelete][, .(Artikelnummer, Artikelname)]
todelete2[, Artikelname := p0(Artikelname, "")]
write.csv.wawi(todelete2, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete_reset.csv"))
write.csv.wawi(todelete3, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete_bis.csv"))
todelete3 <- data[Artikelnummer %in% todeleteb][, .(Artikelnummer, Artikelname)]
todelete3[, Artikelname := p0(Artikelname, "-todelete")]
write.csv.wawi(todelete3, p0(rootpath,"/Firmen_Listen_EAN/Import/20210813_Duplicate_EAN_todelete_bis.csv"))
data[, .N, nchar(EAN.Barcode)]
library(data.table)
wd <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files"
outjs <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/js/Personal/gpx.js"
if( !dir.exists(wd) ) {
wd <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files"
outjs <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/js/Personal/gpx.js"
}
setwd(wd)
lis <- data.table(path = list.files(wd, pattern = ".gpx", full = T, recursive = T))
lis <- lis[!path %like% "gpx.reg"]
lis[, path2 := gsub(paste0(dirname(wd), "/"), "", path) ]
lis[, dir := dirname(path2) ]
lisdir <- unique(lis$dir)
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
lis <- data.table(path = list.files(wd, pattern = "\\.gpx", full = T, recursive = T))
lis <- lis[!path %like% "gpx.reg"]
lis[, path2 := gsub(paste0(dirname(wd), "/"), "", path) ]
lis[, dir := dirname(path2) ]
lisdir <- unique(lis$dir)
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
