temp <- readLines("C:/Users/doria/Downloads/refugio.txt")
temp <- readLines("C:/Users/doria/Downloads/refugio.txt")
temp
library(rjson)
fromJSON("C:/Users/doria/Downloads/refugio.txt")
fromJSON("C:/Users/doria/Downloads/refugio.txt")
fromJSON("C:/Users/doria/Downloads/refugio.txt")
fromJSON(file="C:/Users/doria/Downloads/refugio.txt")
fromJSON(file="C:/Users/doria/Downloads/refugio.txt")
fromJSON(file="C:/Users/doria/Downloads/refugio.txt")
fromJSON(file="C:/Users/doria/Downloads/refugio.txt")
temp <- readLines("C:/Users/doria/Downloads/refugio.txt")
js_typeof()
library(V8)
install.packages("V8")
library(V8)
js_typeof(temp)
library(js)
install.packages("js")
library(js)
js_typeof(temp)
temp <- readLines("C:/Users/doria/Downloads/refugio.txt")
js_typeof(temp)
temp <- readLines("C:/Users/doria/Downloads/refugio.txt")
fromJSON(file="C:/Users/doria/Downloads/refugio.txt")
library(V8)
library(js)
js_typeof(temp)
esprima_tokenize(temp)
esprima_parse(temp)
esprima_tokenize(temp)
temp <- readLines("C:/Users/doria/Downloads/refugio.txt")
esprima_parse(temp)
esprima_tokenize(temp)
fromJSON(temp)
temp <- readLines("C:/Users/doria/Downloads/refugio.txt")
fromJSON(temp)
fromJSON(file="C:/Users/doria/Downloads/refugio.txt")
data <- data.table()
temp <- fromJSON(file="C:/Users/doria/Downloads/refugio.txt")
length(temp)
data <- data.table()
length(temp)
for(i in seq_along(temp)) {
data[i, Name := temp[[i]]$name]
data[i, ID := temp[[i]]$refugio_id]
data[i, Description := temp[[i]]$description]
data[i, lat := temp[[i]]$latitude]
data[i, lon := temp[[i]]$longitude]
}
for(i in 1:length(temp)) {
data[i, Name := temp[[i]]$name]
data[i, ID := temp[[i]]$refugio_id]
data[i, Description := temp[[i]]$description]
data[i, lat := temp[[i]]$latitude]
data[i, lon := temp[[i]]$longitude]
}
data <- data.table()
for(i in 1:length(temp)) {
data[i, Name := temp[[i]]$name]
data[i, ID := temp[[i]]$refugio_id]
data[i, Description := temp[[i]]$description]
data[i, lat := temp[[i]]$latitude]
data[i, lon := temp[[i]]$longitude]
}
data <- data.table(row = 1:length(temp))
length(temp)
for(i in 1:length(temp)) {
data[i, Name := temp[[i]]$name]
data[i, ID := temp[[i]]$refugio_id]
data[i, Description := temp[[i]]$description]
data[i, lat := temp[[i]]$latitude]
data[i, lon := temp[[i]]$longitude]
}
library(sp)
data
data
data <- data.table(row = 1:length(temp))
length(temp)
for(i in 1:length(temp)) {
data[i, Name := temp[[i]]$name]
data[i, ID := temp[[i]]$refugio_id]
data[i, slug := temp[[i]]$slug]
data[i, Description := temp[[i]]$description]
data[i, lat := temp[[i]]$latitude]
data[i, lon := temp[[i]]$longitude]
}
data[, url := p0("http://www.refugioslibres.com/index.php/refugio/", slug)]
library(sp)
latslongs <- SpatialPointsDataFrame(coords=data[, .(lon, lat)], data=data[, .(description, name, url)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
data[,lon := as.numeric(lon)]
data[,lat := as.numeric(lat)]
library(sp)
latslongs <- SpatialPointsDataFrame(coords=data[, .(lon, lat)], data=data[, .(description, name, url)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
latslongs <- SpatialPointsDataFrame(coords=data[, .(lon, lat)], data=data[, .(Description, Name, url)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- "C:/Users/doria/Downloads/Outdoor/Refugios/20230506_refugioslibre.gpx"
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T)
library(rgdal)
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T)
data <- data.table(x = readLines(newfile, encoding = "UTF8"))
data[grep("extensions>", x)]
data <- data[grep("extensions>", x, invert = T)]
data[, x := gsub("ogr:url", "url", x)]
data
data[, x := gsub("  <url", "<url", x)]
write.table(data$x, newfile, quote = F, row.names = F, col.names = F)
ggplot(data, aes(lat, lon))+ geom_point
ggplot(data, aes(lat, lon))+ geom_point()
temp <- fromJSON(file="C:/Users/doria/Downloads/refugio.txt")
data <- data.table(row = 1:length(temp))
length(temp)
for(i in 1:length(temp)) {
data[i, Name := temp[[i]]$name]
data[i, ID := temp[[i]]$refugio_id]
data[i, slug := temp[[i]]$slug]
data[i, Description := temp[[i]]$description]
data[i, lat := temp[[i]]$latitude]
data[i, lon := temp[[i]]$longitude]
}
data[, url := p0("http://www.refugioslibres.com/index.php/refugio/", slug)]
data[,lon := as.numeric(lon)]
data[,lat := as.numeric(lat)]
world <- data.table(map_data("world"))
world2 <- world[region %like% "Spain"]
ggplot(data, aes(lat, lon))+ geom_point()+
geom_polygon(data=world2, aes(long, lat, group = group), colour='black', fill=NA)+
library(sp)
ggplot(data, aes(lat, lon))+ geom_point()+
geom_polygon(data=world2, aes(long, lat, group = group), colour='black', fill=NA)
data <- data[!lat > 75]
ggplot(data, aes(lat, lon))+ geom_point()+
geom_polygon(data=world2, aes(long, lat, group = group), colour='black', fill=NA)
ggplot(data, aes(lon, lat))+ geom_point()+
geom_polygon(data=world2, aes(long, lat, group = group), colour='black', fill=NA)
latslongs <- SpatialPointsDataFrame(coords=data[, .(lon, lat)], data=data[, .(Description, Name, url)], proj4string =CRS("+proj=longlat + ellps=WGS84"))
newfile <- "C:/Users/doria/Downloads/Outdoor/Refugios/20230506_refugioslibre.gpx"
writeOGR(latslongs, dsn=newfile,
dataset_options="GPX_USE_EXTENSIONS=yes",layer="waypoints",driver="GPX", overwrite_layer = T)
data2 <- data.table(x = readLines(newfile, encoding = "UTF8"))
data2[grep("extensions>", x)]
data2 <- data2[grep("extensions>", x, invert = T)]
data2[, x := gsub("ogr:url", "url", x)]
data2
data2[, x := gsub("  <url", "<url", x)]
write.table(data2$x, newfile, quote = F, row.names = F, col.names = F)
remotes::install_github("swarm-lab/trackR")
install.package("devtools")
install.packages("devtools")
install.packages("ROpenCVLite")
remotes::install_github("swarm-lab/trackR")
install.packages("trackR")
# Setup ----------------------------------------------------------------
library(plotKML)
library(ggplot2)
theme_set(theme_bw())
library(formattable)
library(geosphere)
library(gridExtra)
library(data.table)
library(jsonlite)
library(rayshaderanimate)
wd <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files"
outjs <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/js/Personal/gpx_biketrip2022.js"
if( !dir.exists(wd) ) {
wd <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files"
outjs <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/js/Personal/gpx_biketrip2022.js"
}
setwd(wd)
readGPX("C:/Users/doria/Downloads/Zelt.gpx")$waypoints
tent <- data.table(readGPX("C:/Users/doria/Downloads/Zelt.gpx")$waypoints)
tent[, sym := NULL]
tent[, time := NULL]
tent[, lat := as.numeric(lat)]
tent[, lon := as.numeric(lon)]
str(tent)
tent[, coordinates := I(list(lon, lat))]
tent[, coordinates := I(list(lon, lat)), by = row.names(tent)]
toJSON(tent$coordinates)
tent[, coordinates := list(lon, lat), by = row.names(tent)]
toJSON(tent$coordinates)
tent[, coordinates := list(list(lon, lat)), by = row.names(tent)]
toJSON(tent$coordinates)
tent[, coordinates := list(list(lon, lat))]
toJSON(tent$coordinates)
strsplit(paste0(tent$lon, ",", tent$lat), ",")
type(strsplit(paste0(tent$lon, ",", tent$lat), ","))
class(strsplit(paste0(tent$lon, ",", tent$lat), ","))
tent <- data.table(readGPX("C:/Users/doria/Downloads/Zelt.gpx")$waypoints)
tent[, sym := NULL]
tent[, time := NULL]
str(tent)
list(tent$lon, tent$lat)
as.list(tent[, (lon, lat)])
as.list(tent[, .(lon, lat)])
xy.df <- data.frame(x = runif(10),  y = runif(10))
xy.df
as.list(t(tent[, .(lon, lat)]))
as.list(data.table(t(tent[, .(lon, lat)])))
# tent[, coordinates := strsplit(paste0(lon, ",", lat), ",")]
tent[, coordinates := as.list(data.table(t(tent[, .(lon, lat)])))]
toJSON(tent$coordinates)
printfast <- function(plot, name, height=400, width=500, ps=12, qualityprint=100, ext = "jpg", wdfunction = getwd()) {
setwd(wdfunction)
if(ext %in% c("jpg", ".jpg", "jpeg", ".jpeg")) {
jpeg(filename=name, quality=qualityprint, pointsize = ps, height=height, width=width)
print(
plot
)
dev.off()
graphics.off()
}
if(ext %in% c("png", ".png")) {
png(filename=name, pointsize = ps, height=height, width=width)
print(
plot
)
dev.off()
graphics.off()
}
}
lis <- data.table(path = list.files(wd, pattern = "\\.gpx", full = T, recursive = T))
lis <- lis[!path %like% "gpx.reg"]
lis <- lis[!path %like% "_site"]
lis <- lis[path %like% "Bike_trip_2022|Stop"]
lis[, path2 := gsub(paste0(dirname(wd), "/"), "", path) ]
lis[, dir := dirname(path2) ]
lisdir <- unique(lis$dir)
lisdir
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
write(paste0("var sleep =", toJSON(tent[, .(coordinates)])), file = outjs, append = T)
sleepjson <- paste0("var sleep =", toJSON(tent[, .(coordinates)]))
sleepjson
list(geometry = tent[, .(coordinates)])
list(geometry = list(tent[, .(coordinates)]))
list(geometry = as.list(data.table(t(tent[, .(coordinates)]))))
list(geometry = ist(data.table(t(tent[, .(coordinates)]))))
list(geometry = list(data.table(t(tent[, .(coordinates)]))))
list(geometry = setNames(as.list(data.table(t(tent[, .(coordinates)])))), "coordinates")
list(geometry = setNames(as.list(data.table(t(tent[, .(coordinates)]))), "coordinates"))
sleepjson <- paste0("var sleep =", toJSON(temp))
sleepjson
temp <- list(geometry = setNames(as.list(data.table(t(tent[, .(coordinates)]))), "coordinates"))
sleepjson <- paste0("var sleep =", toJSON(temp))
sleepjson
sleepjson <- paste0("var sleep =", toJSON(temp), pretty = T)
sleepjson
sleepjson <- paste0("var sleep =", toJSON(temp, pretty = T))
sleepjson
sleepjson <- paste0("var sleep =", toJSON(temp, pretty = T, simplify = T))
sleepjson
temp <- list(geometry = as.list(data.table(t(tent[, .(coordinates)]))))
sleepjson <- paste0("var sleep =", toJSON(temp, pretty = T, simplify = T))
sleepjson
temp
tent[, .(coordinates)]
t(tent[, .(coordinates)])
data.table(t(tent[, .(coordinates)]))
as.list(data.table(t(tent[, .(coordinates)])))
as.list(data.table(t(tent[, .(lon, lat)])))
temp <- list(geometry = list(type = "point", coordinates = as.list(data.table(t(tent[, .(coordinates)]))))
temp <- list(geometry = list(type = "point", coordinates = as.list(data.table(t(tent[, .(coordinates)])))))
temp
# {"type": "Feature", "properties": {"popupContent": "Saint Béat-Lez" }, "geometry": {"type": "Point", "coordinates":  [0.6988, 42.9117] }},
temp <- list(type = "Feature", geometry = list(type = "point", coordinates = list(c(1, 2)))
# {"type": "Feature", "properties": {"popupContent": "Saint Béat-Lez" }, "geometry": {"type": "Point", "coordinates":  [0.6988, 42.9117] }},
temp <- list(type = "Feature", geometry = list(type = "point", coordinates = list(c(1, 2))))
# {"type": "Feature", "properties": {"popupContent": "Saint Béat-Lez" }, "geometry": {"type": "Point", "coordinates":  [0.6988, 42.9117] }},
temp <- list(type = "Feature", geometry = list(type = "point", coordinates = list(c(1, 2))))
temp
toJSON(temp)
toJSON(temp, simplify = T)
# {"type": "Feature", "properties": {"popupContent": "Saint Béat-Lez" }, "geometry": {"type": "Point", "coordinates":  [0.6988, 42.9117] }},
temp <- list(type = "Feature", geometry = list(type = "point", coordinates = c(1, 2)))
temp
toJSON(temp, simplify = T)
tent[, test := list(type = "Feature", geometry = list(type = "point", coordinates = c(lon, lat)))]
list(type = "Feature", geometry = list(type = "point", coordinates = c(tent[1]$lon, tent[2]$lat)))]
list(type = "Feature", geometry = list(type = "point", coordinates = c(tent[1]$lon, tent[2]$lat)))
sleepjson <- list(type = "Feature", geometry = list(type = "point", coordinates = c(tent[1]$lon, tent[2]$lat)))
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
write(sleepjson, file = outjs, append = T)
sleepjson
sleepjson <- toJSON(list(type = "Feature", geometry = list(type = "point", coordinates = c(tent[1]$lon, tent[2]$lat))))
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
write(sleepjson, file = outjs, append = T)
toJSON(temp, simplify = T)
sleepjson <- paste0("var sleep =", toJSON(list(type = "Feature", geometry = list(type = "point", coordinates = c(tent[1]$lon, tent[2]$lat)))))
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
write(sleepjson, file = outjs, append = T)
sleepjson
sleepjson <- paste0("var sleep =", toJSON(list(type = "Feature",
properties = list(popupContent = tent[1]$name),
geometry = list(type = "Point", coordinates = c(tent[1]$lon, tent[2]$lat)))))
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
write(sleepjson, file = outjs, append = T)
sleepjson <- paste0("var sleep =", toJSON(list(type = "Feature",
properties = list(popupContent = tent[1]$name),
geometry = list(type = "Point", coordinates = c(tent[1]$lon, tent[2]$lat))), flatten = T))
sleepjson
sleepjson <- paste0("var sleep =", toJSON(list(type = "Feature",
properties = list(popupContent = tent[1]$name),
geometry = list(type = "Point", coordinates = c(tent[1]$lon, tent[2]$lat))), simplifyVector=F))
sleepjson
sleepjson <- paste0("var sleep =", toJSON(list(type = "Feature",
properties = list(popupContent = tent[1]$name),
geometry = list(type = "Point", coordinates = c(tent[1]$lon, tent[2]$lat))), auto_unbox = T))
sleepjson
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
write(sleepjson, file = outjs, append = T)
all <- list()
all <- list()
for(i in 1:nrow(tent)){
temp <- list(type = "Feature",
properties = list(popupContent = tent[1]$name),
geometry = list(type = "Point", coordinates = c(tent[1]$lon, tent[2]$lat)))
all <- list(all, temp)
}
all
for(i in 1:nrow(tent)){
temp <- list(type = "Feature",
properties = list(popupContent = tent[1]$name),
geometry = list(type = "Point", coordinates = c(tent[1]$lon, tent[2]$lat)))
all <- c(all, temp)
}
all
sleepjson <- paste0("var sleep =", toJSON(temp, auto_unbox = T))
sleepjson
sleepjson <- paste0("var sleep =", toJSON(all, auto_unbox = T))
sleepjson
for(i in 1:nrow(tent)){
temp <- list(type = "Feature",
properties = list(popupContent = tent[i]$name),
geometry = list(type = "Point", coordinates = c(tent[i]$lon, tent[i]$lat)))
all <- c(all, temp)
}
all
temp
unlist(temp)
all <- list()
for(i in 1:nrow(tent)){
temp <- list(type = "Feature",
properties = list(popupContent = tent[i]$name),
geometry = list(type = "Point", coordinates = c(tent[i]$lon, tent[i]$lat)))
temp
unlist(temp)
all <- c(all, list(temp))
}
all
sleepjson <- paste0("var sleep =", toJSON(all, auto_unbox = T))
sleepjson
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
write(sleepjson, file = outjs, append = T)
sleepjson <- paste0("var sleep =", toJSON(all, auto_unbox = T, simplify = T))
sleepjson
sleepjson <- paste0("var sleep =", toJSON(all, auto_unbox = T, pretty = T))
sleepjson
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
write(sleepjson, file = outjs, append = T)
