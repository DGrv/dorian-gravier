wd <- rP("file:///C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/configBU/timetrap/")
setwd(wd)
ll <- list.files(wd, "csv")
ll <- ll[rev(order(ll))]
lf <- ll[1]
data <- data.table(read.csv(lf, encoding = "utf-8"))
data[, start2 := as.POSIXct(start, format = "%Y-%m-%d %H:%M:%S")]
data[, end2 := as.POSIXct(end, format = "%Y-%m-%d %H:%M:%S")]
data[, EventDay := F]
data[note %like% " EVENT", EventDay := T]
data[, .N, EventDay]
data[EventDay==T, nDays := as.numeric(difftime(end2, start2, units = "days"))]
data[, nDays2 := ifelse(nDays<1, ceiling(nDays), ceiling(nDays*2)/2)]
data[EventDay==T]
dataE <- data[EventDay==T, .(SumDays = sum(nDays2)), note]
dataE[, note := gsub(" EVENT", "", note)]
dataE
cat(red("Number of Event days: "), sum(dataE$SumDays))
data[EventDay==F, nHours := as.numeric(difftime(end2, start2, units = "hours"))]
data2 <- data[EventDay==F, .(SumHours = sum(nHours)), note]
data2 <- dtjoin(data2, dataE)
data2[, EventDay2 := ifelse(is.na(SumDays)==T, F, T)]
ggplot(data2, aes(note, SumHours, fill = EventDay2))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=SumDays), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")
# setup
rm(list = ls())
rootpath <- 'C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/'
# Sys.setlocale('LC_ALL', 'German')
suppressWarnings(suppressMessages(source(paste0(rootpath, "BM_Function_v01.r"), encoding="utf-8")))
wd <- rP("file:///C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/configBU/timetrap/")
setwd(wd)
ll <- list.files(wd, "csv")
ll <- ll[rev(order(ll))]
lf <- ll[1]
data <- data.table(read.csv(lf, encoding = "utf-8"))
data[, start2 := as.POSIXct(start, format = "%Y-%m-%d %H:%M:%S")]
data[, end2 := as.POSIXct(end, format = "%Y-%m-%d %H:%M:%S")]
data[, EventDay := F]
data[note %like% " EVENT", EventDay := T]
data[, .N, EventDay]
data[EventDay==T, nDays := as.numeric(difftime(end2, start2, units = "days"))]
data[, nDays2 := ifelse(nDays<1, ceiling(nDays), ceiling(nDays*2)/2)]
data[EventDay==T]
dataE <- data[EventDay==T, .(SumDays = sum(nDays2)), note]
dataE[, note := gsub(" EVENT", "", note)]
dataE
cat(red("Number of Event days: "), sum(dataE$SumDays))
data[EventDay==F, nHours := as.numeric(difftime(end2, start2, units = "hours"))]
data2 <- data[EventDay==F, .(SumHours = sum(nHours)), note]
data2 <- dtjoin(data2, dataE)
data2[, OnSite := ifelse(is.na(SumDays)==T, F, T)]
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=SumDays), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")
data2 <- dtjoin(data2, dataE, type = full)
dtjoin
data2 <- dtjoin(data2, dataE, type = "full")
data2[, OnSite := ifelse(is.na(SumDays)==T, F, T)]
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=SumDays), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")
data2
data2[is.na(SumHours), SumHours := 0]
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=SumDays), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")
geom_text(aes(label=round(SumHours), x = SumHours/2)+
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=SumDays), hjust = -0.3)+
geom_text(aes(label=round(SumHours), x = SumHours/2))+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=SumDays), hjust = -0.3)+
geom_text(aes(label=round(SumHours), y = SumHours/2))+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=SumHours), hjust = -0.3)+
geom_text(aes(label=round(SumDays), y = SumHours/2))+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=round(SumHours)), hjust = -0.3)+
geom_text(aes(label=SumDays, y = SumHours/2))+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=round(SumHours)), hjust = -0.3)+
geom_text(aes(label=SumDays, y = SumHours/2))+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(SumHours)*1.1))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=round(SumHours)), hjust = -0.3)+
geom_text(aes(label=SumDays, y = SumHours/2))+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.1))
ylim(c(0, max(data2$SumHours)*1.1))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), " - ", SumDays)), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.1))
geom_text(aes(label=p0(round(SumHours), ifelse(!is.na(SumDays), p0(" - ", SumDays))), hjust = -0.3)+
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), ifelse(!is.na(SumDays), p0(" - ", SumDays)))), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.1))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), ifelse(!is.na(SumDays), p0(" - ", SumDays)))), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.1))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), ifelse(is.na(SumDays)==F, p0(" - ", SumDays)))), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.1))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), ifelse(is.na(SumDays)==F, p0(" - ", SumDays), ""))), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.1))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), ifelse(is.na(SumDays)==F, p0(" - ", SumDays), ""))), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 1)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 4)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 2)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))
Sys.time()
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))+
title(p0("Time distribution per Event", format(Sys.time(), "%Y-%m-%d")	))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))+
title(p0("Time distribution per Event", format(Sys.time(), "%Y-%m-%d")))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))+
labs(title=p0("Time distribution per Event", format(Sys.time(), "%Y-%m-%d")))
ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))+
labs(title=p0("Time distribution per Event ", format(Sys.time(), "%Y-%m-%d")))
ggplot(dataE, aes(note, SumDays))+
geom_bar(stat="identity")+
turnXaxis()+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))+
labs(title=p0("Time distribution per Event ", format(Sys.time(), "%Y-%m-%d")))
ggplot(dataE, aes(note, SumDays))+
geom_bar(stat="identity")+
turnXaxis()+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
labs(title=p0("Time distribution per Event ", format(Sys.time(), "%Y-%m-%d")))
setwd(wd2)
printfast(a, "Event_hours.jpg", 400, 500)
printfast(b, "Event_days.jpg", 400, 500)
# setup
rm(list = ls())
rootpath <- 'C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/'
# Sys.setlocale('LC_ALL', 'German')
suppressWarnings(suppressMessages(source(paste0(rootpath, "BM_Function_v01.r"), encoding="utf-8")))
wd <- rP("file:///C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/configBU/timetrap/")
wd2 <- rP("file:///C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/RR/timetrap")
setwd(wd)
ll <- list.files(wd, "csv")
ll <- ll[rev(order(ll))]
lf <- ll[1]
data <- data.table(read.csv(lf, encoding = "utf-8"))
data[, start2 := as.POSIXct(start, format = "%Y-%m-%d %H:%M:%S")]
data[, end2 := as.POSIXct(end, format = "%Y-%m-%d %H:%M:%S")]
data[, EventDay := F]
data[note %like% " EVENT", EventDay := T]
data[, .N, EventDay]
data[EventDay==T, nDays := as.numeric(difftime(end2, start2, units = "days"))]
data[, nDays2 := ifelse(nDays<1, ceiling(nDays), ceiling(nDays*2)/2)]
data[EventDay==T]
dataE <- data[EventDay==T, .(SumDays = sum(nDays2)), note]
dataE[, note := gsub(" EVENT", "", note)]
dataE
cat(red("Number of Event days: "), sum(dataE$SumDays))
data[EventDay==F, nHours := as.numeric(difftime(end2, start2, units = "hours"))]
data2 <- data[EventDay==F, .(SumHours = sum(nHours)), note]
data2 <- dtjoin(data2, dataE, type = "full")
data2[, OnSite := ifelse(is.na(SumDays)==T, F, T)]
data2[is.na(SumHours), SumHours := 0]
a <- ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))+
labs(title=p0("Time distribution per Event ", format(Sys.time(), "%Y-%m-%d")))
b <- ggplot(dataE, aes(note, SumDays))+
geom_bar(stat="identity")+
turnXaxis()+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
labs(title=p0("Time distribution per Event ", format(Sys.time(), "%Y-%m-%d")))
setwd(wd2)
printfast(a, "Event_hours.jpg", 400, 500)
printfast(b, "Event_days.jpg", 400, 500)
printfast(a, "Event_hours.jpg", 600, 800)
printfast(b, "Event_days.jpg", 600, 800)
dataE
data
dataE <- data[EventDay==T, .(SumDays = sum(nDays2), StartDay = min(start2)), note]
dataE[, note := gsub(" EVENT", "", note)]
dataE
dataE <- data[EventDay==T, .(SumDays = sum(nDays2), StartDay = format(min(start2), "%Y-%m-%d"), EndDay = format(max(start2), "%Y-%m-%d"), note]
dataE <- data[EventDay==T, .(SumDays = sum(nDays2), StartDay = format(min(start2), "%Y-%m-%d"), EndDay = format(max(start2), "%Y-%m-%d")), note]
dataE[, note := gsub(" EVENT", "", note)]
dataE
dataE2 <- copy(dataE)
dataE2[nrow(dataE)+1] <- c("TTDays", sum(dataE$SumDays), "", "")
dataE2
dataE2[nrow(dataE)+1]
dataE2[nrow(dataE)+1][1]
dataE2 <- rbind(dataE2, c("TTDays", sum(dataE$SumDays), "", "")
dataE2 <- rbind(dataE2, c("TTDays", sum(dataE$SumDays), "", ""))
dataE2
dataE2 <- copy(dataE)
dataE2 <- rbind(dataE2, c("TTDays", sum(dataE$SumDays), "", ""))
dataE2[nrow(dataE)+1] <- list("TTDays", sum(dataE$SumDays), "", "")
dataE2
dataE2 <- copy(dataE)
dataE2[nrow(dataE)+1] <- list("TTDays", sum(dataE$SumDays), "", "")
dataE2
list("TTDays", sum(dataE$SumDays), "", "")
dataE2[nrow(dataE)+1] <- list("TTDays", sum(dataE$SumDays), "", "")
dataE2
dataE2
dataE2 <- rbindlist(dataE2, list("TTDays", sum(dataE$SumDays), "", "")
dataE2 <- rbindlist(dataE2, list("TTDays", sum(dataE$SumDays), "", ""))
b <- ggplot(dataE, aes(note, SumDays))+
geom_bar(stat="identity")+
turnXaxis()+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
labs(title=p0("Days distribution per Event ", format(Sys.time(), "%Y-%m-%d"), , " TT=", TTDays))
# setup
rm(list = ls())
rootpath <- 'C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/'
# Sys.setlocale('LC_ALL', 'German')
suppressWarnings(suppressMessages(source(paste0(rootpath, "BM_Function_v01.r"), encoding="utf-8")))
wd <- rP("file:///C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/configBU/timetrap/")
wd2 <- rP("file:///C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/RR/timetrap")
setwd(wd)
ll <- list.files(wd, "csv")
ll <- ll[rev(order(ll))]
lf <- ll[1]
data <- data.table(read.csv(lf, encoding = "utf-8"))
data[, start2 := as.POSIXct(start, format = "%Y-%m-%d %H:%M:%S")]
data[, end2 := as.POSIXct(end, format = "%Y-%m-%d %H:%M:%S")]
data[, EventDay := F]
data[note %like% " EVENT", EventDay := T]
data[, .N, EventDay]
data[EventDay==T, nDays := as.numeric(difftime(end2, start2, units = "days"))]
data[, nDays2 := ifelse(nDays<1, ceiling(nDays), ceiling(nDays*2)/2)]
data[EventDay==T]
dataE <- data[EventDay==T, .(SumDays = sum(nDays2), StartDay = format(min(start2), "%Y-%m-%d"), EndDay = format(max(start2), "%Y-%m-%d")), note]
dataE[, note := gsub(" EVENT", "", note)]
dataE
TTDays <- sum(dataE$SumDays)
cat(red("Number of Event days: "), TTDays)
data[EventDay==F, nHours := as.numeric(difftime(end2, start2, units = "hours"))]
data2 <- data[EventDay==F, .(SumHours = sum(nHours)), note]
data2 <- dtjoin(data2, dataE, type = "full")
data2[, OnSite := ifelse(is.na(SumDays)==T, F, T)]
data2[is.na(SumHours), SumHours := 0]
a <- ggplot(data2, aes(note, SumHours, fill = OnSite))+
geom_bar(stat="identity")+
turnXaxis()+
geom_text(aes(label=p0(round(SumHours), "h", ifelse(is.na(SumDays)==F, p0(" - ", SumDays, "d"), ""))), hjust = -0.1, size = 3)+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
ylim(c(0, max(data2$SumHours)*1.3))+
labs(title=p0("Time distribution per Event ", format(Sys.time(), "%Y-%m-%d")))
b <- ggplot(dataE, aes(note, SumDays))+
geom_bar(stat="identity")+
turnXaxis()+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
labs(title=p0("Days distribution per Event ", format(Sys.time(), "%Y-%m-%d"), , " TT=", TTDays))
b <- ggplot(dataE, aes(note, SumDays))+
geom_bar(stat="identity")+
turnXaxis()+
coord_flip()+
orderX(data2[order(SumHours)]$note)+
xlab("Event")+
labs(title=p0("Days distribution per Event ", format(Sys.time(), "%Y-%m-%d"), " TT=", TTDays))
b
# setup
rm(list = ls())
rootpath <- 'C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/R/'
# Sys.setlocale('LC_ALL', 'German')
suppressWarnings(suppressMessages(source(paste0(rootpath, "BM_Function_v01.r"), encoding="utf-8")))
suppressWarnings(suppressMessages(library(leaflet)))
suppressWarnings(suppressMessages(library(leaflet.extras)))
suppressWarnings(suppressMessages(library(httr2)))
suppressWarnings(suppressMessages(library(htmlwidgets)))
apikey <- readLines(rP("file:///C:/Users/doria/Downloads/secret/apiRR.txt"))[1]
# repeat {
# Add custom header
req1 <- request("https://rest.devices.raceresult.com/token") |>
req_headers("apikey" = apikey) |>
req_body_raw(body = "", type = "application/json")
resp1 <- req_perform(req1)
# resp1 |> rdataesp_raw()
resp1b <-  resp1 |> resp_body_json() |> unlist() |> t() |> data.table()
resp1b
# req2 <- request("https://rest.devices.raceresult.com/customers/846/devices?connected=true") |>
req2 <- request("https://rest.devices.raceresult.com/customers/846/devices") |>
req_auth_bearer_token(resp1b$access_token)
resp2 <- req_perform(req2)
resp2b <- data.table(jsonlite::fromJSON(resp_body_string(resp2), flatten = T)$Devices)
resp2b
rm(req1, req2)
resp2
resp_body_string(resp2)
# debug
writeLines(resp_body_string(resp2), rP("file:///C:/Users/doria/Downloads/resp2.json"))
resp2b <- data.table(jsonlite::fromJSON(resp_body_string(resp2), flatten = T)$Devices)
resp2b
rm(req1, req2)
resp2b
RRdevices <- resp2b[, .(DeviceID,
DeviceType,
BatteryCharge,
Temperature,
Connected,
Received = as.POSIXct(gsub("T", " ", gsub("Z", "", Received)), format = "%F %T"),
RealTime = as.POSIXct(gsub("T", " ", gsub("Z", "", RealTime)), format = "%F %T"),
UTCOffset,
FileNo,
TimeZoneName,
RecordsCount,
time = Time.Time,
flag = Position.Flag,
lon = Position.Longitude,
lat = Position.Latitude,
Power = DecoderStatus.HasPower,
ReadHealthy = DecoderStatus.ReaderIsHealthy,
Antennas = DecoderStatus.Antennas,
ReaderStatus = TrackboxStatus.ReaderStatus)]
RRdevices
RRdevicesBU <- copy(RRdevices)
cdl <- c("T-21172",
"T-21154",
"T-21112",
"T-21030",
"T-21051",
"T-21122",
"T-20967",
"T-21046",
"T-21179",
"T-21083",
"T-21144",
"T-21079")
RRdevices <- RRdevices[is.na(DeviceID)==F]
dGMT <- RRdevices[TimeZoneName == "GMT"]$DeviceID
RRdevices[TimeZoneName == "GMT", RealTime := RealTime + 7200]
RRdevices[TimeZoneName == "GMT", Received := Received + 7200]
RRdevices[is.na(Power), Power := FALSE]
RRdevices[Connected == FALSE, DeviceID := p0(DeviceID, " - Disconnected")]
RRdevices[, popup := p0(DeviceID,
"<br>Power: ",  Power,
"<br>", BatteryCharge,
"%<br>LastRec: ", Received, "<br>Rsta: ", ReaderStatus)]
RRdevices <- RRdevices[Received > "2025-01-01"]
RRdevices[, .N, DeviceType]
RRdevices[Connected == T]
# test 2 days ago
RRDevices[Received > "2025-05-16"]
# test 2 days ago
RRdevices[Received > "2025-05-16"]
