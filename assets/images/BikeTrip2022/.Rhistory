mpg
mpg[, new:= 0]
for(i in 2:nrow(mpg)) {
mpg[i, new := mpg$displ[i]+mpg$new[i-1]]
}
mpg
mpg
devtools::install_github("zappingseb/rayshaderanimate")
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("zappingseb/rayshaderanimate")
library(devtools)
library(rayshaderanimate)
library(data.table)
gpx <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/gpx/Bike_trip_2022/B_2022_Bike-travel_051.gpx"
data <- get_table_from_gpx(gpx)
library(rayshadeanimate)
devtools::install_github("zappingseb/rayshaderanimate")
1
library(rayshadeanimate)
devtools::install_github("zappingseb/rayshaderanimate")
library(pacman)
install.packages("pacman")
library(pacman)
update.packages(p_lib())
p_lib()
devtools::install_github("zappingseb/rayshaderanimate")
install.packages("vctrs")
install.packages("vctrs")
devtools::install_github("zappingseb/rayshaderanimate")
library(rayshadeanimate)
devtools::install_github("zappingseb/rayshaderanimate")
library(ray)
library(rayshaderanimate)
library(data.table)
gpx <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/gpx/Bike_trip_2022/B_2022_Bike-travel_051.gpx"
data <- get_table_from_gpx(gpx)
data
data <-get_table_from_gpx(gpx)
data
get_enriched_gpx_table(data)
databbox <- get_bbox_from_gpx_table(data)
data2 <- get_enriched_gpx_table(data)
data2
databbox <- get_bbox_from_gpx_table(data)
databbox
el_mat <- get_elevdata_from_bbox(databbox)
el_mat <- get_elevdata_from_bbox(databbox)
bbox <- get_bbox_from_gpx_table(data)
bbox
getData("SRTM", lon = bbox[1, 1], lat = bbox[2, 2])
raster::getData("SRTM", lon = bbox[1, 1], lat = bbox[2, 2])
install.packages("geodata")
geodata::elevation_3s(lon = bbox[1, 1], lat = bbox[2, 2])
geodata::elevation_3s(lon = bbox[1, 1], lat = bbox[2, 2], path = "C:/Users/doria/Downloads")
# Animate GPX line on 2d plot
plot_2d_animation()
# Plot a 2D raster of the bbox
plot_2d_elevdata()
getData(namepath="C:/Users/doria/Downloads/srtm_37_04 (1).zip")
raster::getData(namepath="C:/Users/doria/Downloads/srtm_37_04 (1).zip")
raster::getData(path="C:/Users/doria/Downloads/srtm_37_04 (1).zip")
raster::getData("SRTM"; path="C:/Users/doria/Downloads/srtm_37_04 (1).zip")
raster::getData("SRTM", path="C:/Users/doria/Downloads/srtm_37_04 (1).zip")
raster::getData("SRTM", lon = bbox[1, 1], lat = bbox[2, 2], path="C:/Users/doria/Downloads/srtm_37_04 (1).zip")
trace("getData", edit =T)
trace("raster::getData", edit =T)
library(raster)
trace("getData", edit =T)
trace("get_raw_elevdata_from_bbox", edit =T)
trace(".get_raw_elevdata_from_bbox", edit =T)
library(rayshadeanimate)
library(rayshadeanimate)
library(rayshaderanimate)
trace("get_raw_elevdata_from_bbox", edit =T)
trace(".get_raw_elevdata_from_bbox", edit =T)
trace(".get_raw_elevdata_from_bbox", edit =T)
fix(".get_raw_elevdata_from_bbox")
fix("get_raw_elevdata_from_bbox")
fix("getData")
find("get_raw_elevdata_from_bbox")
get_raw_elevdata_from_bbox()
get_raw_elevdata_from_bbox(
fix("get_raw_elevdata_from_bbox")
getAnywhere("get_raw_elevdata_from_bbox")
fix("rayshaderanimate:::get_raw_elevdata_from_bbox")
fix("rayshaderanimate:::.get_raw_elevdata_from_bbox")
fix("rayshaderanimate::.get_raw_elevdata_from_bbox")
getAnywhere(get_raw_elevdata_from_bbox)
getAnywhere(.get_raw_elevdata_from_bbox)
[]
fix(`rayshaderanimate::.get_raw_elevdata_from_bbox`())
fix(`rayshaderanimate::.get_raw_elevdata_from_bbox`
fix(`rayshaderanimate::.get_raw_elevdata_from_bbox`)
fix(`rayshaderanimate:::.get_raw_elevdata_from_bbox`)
fix(rayshaderanimate::.get_raw_elevdata_from_bbox)
fix("rayshaderanimate::.get_raw_elevdata_from_bbox")
fix("rayshaderanimate:::.get_raw_elevdata_from_bbox")
fix(".get_raw_elevdata_from_bbox", "rayshaderanimate")
fix("get_raw_elevdata_from_bbox", "rayshaderanimate")
getAnywhere(.get_raw_elevdata_from_bbox)[1]
getAnywhere(.get_raw_elevdata_from_bbox)[2]
rayshaderanimate:::.get_raw_elevdata_from_bbox
fix("rayshaderanimate:::.get_raw_elevdata_from_bbox")
trace("rayshaderanimate:::.get_raw_elevdata_from_bbox", edit = T)
fixInNamespace(".get_raw_elevdata_from_bbox", "rayshaderanimate")
el_mat <- get_elevdata_from_bbox(databbox)
fixInNamespace(".get_raw_elevdata_from_bbox", "rayshaderanimate")
el_mat <- get_elevdata_from_bbox(databbox)
getAnywhere(".downloadDirect")
fixInNamespace(".get_raw_elevdata_from_bbox", "rayshaderanimate")
el_mat <- get_elevdata_from_bbox(databbox)
devtools::install_github("fedefyco/raster")
library(rayshaderanimate)
library(data.table)
gpx <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/gpx/Bike_trip_2022/B_2022_Bike-travel_051.gpx"
data <-get_table_from_gpx(gpx)
data
data2 <- get_enriched_gpx_table(data)
data2
bbox <- get_bbox_from_gpx_table(data)
bbox
el_mat <- get_elevdata_from_bbox(databbox)
databbox
databbox <- get_bbox_from_gpx_table(data)
databbox
el_mat <- get_elevdata_from_bbox(databbox)
SRTM<-function(lon, lat) {
stopifnot(lon >= -180 & lon <= 180)
stopifnot(lat >= -60 & lat <= 60)
rs <- raster(nrows=24, ncols=72, xmn=-180, xmx=180, ymn=-60, ymx=60 )
rowTile <- rowFromY(rs, lat)
colTile <- colFromX(rs, lon)
if (rowTile < 10) { rowTile <- paste('0', rowTile, sep='') }
if (colTile < 10) { colTile <- paste('0', colTile, sep='') }
f <- paste('srtm_', colTile, '_', rowTile, sep="")
theurl <- paste("http://srtm.csi.cgiar.org/wp-content/uploads/files/srtm_5x5/TIFF/", f, ".ZIP", sep="")
utils::download.file(url=theurl, destfile='srtm_40_0.zip', method="auto", quiet = FALSE, mode = "wb", cacheOK = TRUE)
}
el_mat <- get_elevdata_from_bbox(databbox)
getAnywhere(".SRTM")
fixInNamespace(".SRTM", "raster")
el_mat <- get_elevdata_from_bbox(databbox)
el_mat <- get_elevdata_from_bbox(databbox)
library(rayshaderanimate)
library(data.table)
gpx <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/gpx/Bike_trip_2022/B_2022_Bike-travel_051.gpx"
data <-get_table_from_gpx(gpx)
data
data2 <- get_enriched_gpx_table(data)
data2
databbox <- get_bbox_from_gpx_table(data)
databbox
el_mat <- get_elevdata_from_bbox(databbox)
geodata::elevation_3s(lon = bbox[1, 1], lat = bbox[2, 2], path = "C:/Users/doria/Downloads")
geodata::elevation_3s(lon = databbox[1, 1], lat = databox[2, 2], path = "C:/Users/doria/Downloads")
geodata::elevation_3s(lon = databbox[1, 1], lat = databbox[2, 2], path = "C:/Users/doria/Downloads")
fixInNamespace(".SRTM", "raster")
fixInNamespace(".SRTM", "raster")
el_mat <- get_elevdata_from_bbox(databbox)
el_mat <- get_elevdata_from_bbox(databbox)
getAnywhere("raster")
install.packages("raster")
install.packages("raster")
library(rayshaderanimate)
library(data.table)
gpx <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/gpx/Bike_trip_2022/B_2022_Bike-travel_051.gpx"
data <-get_table_from_gpx(gpx)
data
data2 <- get_enriched_gpx_table(data)
data2
databbox <- get_bbox_from_gpx_table(data)
databbox
el_mat <- get_elevdata_from_bbox(databbox)
fixInNamespace(".SRTM", "raster")
fixInNamespace(".SRTM", "raster")
el_mat <- get_elevdata_from_bbox(databbox)
fixInNamespace(".SRTM", "raster")
el_mat <- get_elevdata_from_bbox(databbox)
library(rayshaderanimate)
library(data.table)
gpx <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/gpx/Bike_trip_2022/B_2022_Bike-travel_051.gpx"
data <-get_table_from_gpx(gpx)
data
data2 <- get_enriched_gpx_table(data)
data2
databbox <- get_bbox_from_gpx_table(data)
databbox
el_mat <- get_elevdata_from_bbox(databbox)
download.file("https://srtm.csi.cgiar.org/wp-content/uploads/files/srtm_5x5/TIFF/srtm_37_04.zip", "C:/Users/doria/Downloads/test.zip")
devtools::install_github("pokyah/raster")
remove.packages("Rcpp")
devtools::install_github("pokyah/raster")
devtools::install_github("pokyah/raster")
devtools::install_github("pokyah/raster")
install.pckages("Rcpp")
install.packages("Rcpp")
devtools::install_github("pokyah/raster")
library(raster)
library(rayshaderanimate)
library(data.table)
gpx <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/gpx/Bike_trip_2022/B_2022_Bike-travel_051.gpx"
data <-get_table_from_gpx(gpx)
data
data2 <- get_enriched_gpx_table(data)
library(rayshaderanimate)
devtools::install_github("zappingseb/rayshaderanimate")
devtools::install_github("zappingseb/rayshaderanimate", force=T)
install.packages(c("s2",      "stringi" ,"terra",   "vctrs",   "purrr",   "curl" ,   "xfun" ,   "digest,"htmltools")
install.packages(c("s2",      "stringi" ,"terra",   "vctrs",   "purrr",   "curl" ,   "xfun" ,   "digest","htmltools")
)
install.packages(c("s2", "stringi", "terra", "vctrs", "purrr", "curl", "xfun", "digest", "htmltools"))
devtools::install_github("zappingseb/rayshaderanimate")
devtools::install_github("zappingseb/rayshaderanimate", force = T)
library(raster)
library(rayshaderanimate)
library(data.table)
gpx <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/gpx/Bike_trip_2022/B_2022_Bike-travel_051.gpx"
data <-get_table_from_gpx(gpx)
data
data2 <- get_enriched_gpx_table(data)
data2
databbox <- get_bbox_from_gpx_table(data)
databbox
el_mat <- get_elevdata_from_bbox(databbox)
download.file("https://srtm.csi.cgiar.org/wp-content/uploads/files/srtm_5x5/TIFF/srtm_37_04.zip", "C:/Users/doria/Downloads/test.zip")
download.file("https://srtm.csi.cgiar.org/wp-content/uploads/files/srtm_5x5/TIFF/srtm_37_04.zip", "C:/Users/doria/Downloads/test.zip", mode="wb")
download.file("https://srtm.csi.cgiar.org/wp-content/uploads/files/srtm_5x5/TIFF/srtm_37_04.zip", mode="wb")
download.file("https://srtm.csi.cgiar.org/wp-content/uploads/files/srtm_5x5/TIFF/srtm_37_04.zip", tempfile(), mode="wb")
remove.packages("rayimage")
remove.packages("terra")
remove.packages("vctrs")
remove.packages("xfun")
install.packages("rayimage")
install.packages("terra")
install.packages("vctrs")
install.packages("xfun")
install.packages("rayimage")
install.packages("terra")
install.packages("vctrs")
install.packages("xfun")
devtools::install_github("tylermorganwall/rayshader")
library(rayshaderanimate)
map_to_plot <- matrix_extended %>% sphere_shade(texture = "imhof4") %>%
add_shadow(raymat, max_darken = 0.5) %>%
add_shadow(ambmat, max_darken = 0.5)
install.packages("rayshader")
library(rayshaderanimate)
library(data.table)
library(rayshader)
# library(raster)
# library(R.utils)
# reassignInPackage(name=".download", pkgName="raster", value="my.fn")
# el_mat <- get_elevdata_from_bbox(databbox)
gpx <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/gpx/Bike_trip_2022/B_2022_Bike-travel_051.gpx"
data <-get_table_from_gpx(gpx)
data
data2 <- get_enriched_gpx_table(data)
data2
databbox <- get_bbox_from_gpx_table(data)
databbox
# bbox_map(databbox)
# getAnywhere(".download")
# el_mat <- get_elevdata_from_bbox(databbox)
my.fn <- function(aurl, filename){
cat("You wanna download: ", aurl, "\n")
cat("You wanna save it there : ", filename, "\n\n")
httr::set_config(httr::config(ssl_verifypeer=0L))
httr::GET(aurl, httr::write_disk(path = filename, overwrite = F))
}
tmpfun <- get(".download", envir = asNamespace("raster"))
environment(my.fn) <- environment(tmpfun)
attributes(my.fn) <- attributes(tmpfun)  # don't know if this is really needed
assignInNamespace(".download", my.fn, ns="raster")
# getAnywhere(".download")
el_mat <- get_elevdata_from_bbox(databbox)
el_mat
# fixInNamespace(".download", "raster")
elmat_rayshade <- unlabel_elevdata(el_mat)
elmat_rayshade
elevdata_long<- data.table(get_elevdata_long(el_mat))
# Animate GPX line on 2d plot
plot_2d_animation(gpx_table = data2, elevdata_long = elevdata_long)
matrix_extended <- elmat_rayshade
zscale <- 50
raymat <- ray_shade(matrix_extended, sunaltitude=20, zscale = zscale, lambert = TRUE)
ambmat <- ambient_shade(matrix_extended, zscale = zscale)
watermap <- detect_water(matrix_extended)
matrix_extended
map_to_plot <- matrix_extended %>% sphere_shade(texture = "imhof4") %>%
add_shadow(raymat, max_darken = 0.5) %>%
add_shadow(ambmat, max_darken = 0.5)
devtools::install_github("tylermorganwall/rayshader")
remove.packages(c("rayrender", "rayvertex", "rayshader"))
remove.packages(rayshader")
remove.packages("rayshader")
install.packages("vctrs")
install.packages("vctrs")
gsub("((?:[^_]+_){2}[^_]+)_", "\\1 ", "Hello_world_I am a good_guy and want to_save_theworl)]
)
gsub("((?:[^_]+_){2}[^_]+)_", "\\1 ", "Hello_world_I am a good_guy and want to_save_the_world")
string <- ""Hello_world_I am a good_guy and want to_save_the_world""
string <- ""Hello_world_I am a good_guy and want to_save_the_world"
string <- "Hello_world_I am a good_guy and want to_save_the_world"
gsub("((?:[^_]+_){2}[^_]+)_", "\\1 ", string)
string <- "Hello_world_I am a good_guy and want to_save_the_world"
string
gsub("((?:[^_]+_){2}[^_]+)_", "\\1 ", string)
string
gsub("^([^ - ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)]
gsub("^([^ - ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)]
string <- gsub("_", " - ", string)
string
gsub("^([^ - ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)]
string <- "Hello_world_I am a good_guy and want to_save_the_world"
string <- gsub("_", " - ", string)
string
gsub("^([^ - ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
string <- gsub("world", " world 2", string)
string
gsub("^([^ - ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ][\\w\\s]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ][\\w\\s]+ - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ][\\w\\s]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
string
gsub("^([^ - ][\\s\\w\\s]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ][A-z ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ][A-z; ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ][A-z, ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ][\\w\\s]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ][\\w]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ].* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ]\\w* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ]\\w\\s* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
gsub("^([^ - ][\\w\\s]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
string
string <- "Hello_world_I am a good_guy and want to_save_the_world"
string <- gsub("_", " - ", string)
string <- gsub("world",  world 2", string)
string <- gsub("world",  "world 2", string)
string
gsub("^([^ - ][\\w\\s]* - ){2}(*SKIP)(*F)| - ", " | ", string, perl=T)
# Setup ----------------------------------------------------------------
library(plotKML)
library(ggplot2)
theme_set(theme_bw())
library(formattable)
library(geosphere)
library(gridExtra)
library(data.table)
wd <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files"
outjs <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/js/Personal/gpx_biketrip2022.js"
if( !dir.exists(wd) ) {
wd <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files"
outjs <- "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/js/Personal/gpx_biketrip2022.js"
}
setwd(wd)
printfast <- function(plot, name, height=400, width=500, ps=12, qualityprint=100, ext = "jpg", wdfunction = getwd()) {
setwd(wdfunction)
if(ext %in% c("jpg", ".jpg", "jpeg", ".jpeg")) {
jpeg(filename=name, quality=qualityprint, pointsize = ps, height=height, width=width)
print(
plot
)
dev.off()
graphics.off()
}
if(ext %in% c("png", ".png")) {
png(filename=name, pointsize = ps, height=height, width=width)
print(
plot
)
dev.off()
graphics.off()
}
}
# get data ----------------------------------------------------------------
lis <- data.table(path = list.files(wd, pattern = "\\.gpx", full = T, recursive = T))
lis <- lis[!path %like% "gpx.reg"]
lis <- lis[!path %like% "_site"]
lis <- lis[path %like% "Bike_trip_2022"]
lis[, path2 := gsub(paste0(dirname(wd), "/"), "", path) ]
lis[, dir := dirname(path2) ]
lisdir <- unique(lis$dir)
lisdir
lis <- data.table(path = list.files(wd, pattern = "\\.gpx", full = T, recursive = T))
lis <- lis[!path %like% "gpx.reg"]
lis
lis <- lis[path %like% "Bike_trip_2022|Stop"]
lis <- data.table(path = list.files(wd, pattern = "\\.gpx", full = T, recursive = T))
lis <- lis[!path %like% "gpx.reg"]
lis <- lis[!path %like% "_site"]
lis <- lis[path %like% "Bike_trip_2022|Stop"]
lis
lis[, path2 := gsub(paste0(dirname(wd), "/"), "", path) ]
lis[, dir := dirname(path2) ]
lisdir <- unique(lis$dir)
lisdir
write("// create file", file = outjs)
for(i in seq_along(lisdir)) {
if( lisdir[i] != "gpx" ) {
if( basename(lisdir[i]) == "Project" ) {
varname <- paste0(basename(dirname(lisdir[i])), basename(lisdir[i]))
} else {
varname <- basename(lisdir[i])
}
lis2 <- lis[dir == lisdir[i]]
for( j in 1:nrow(lis2)) {
if( j == 1) {
write(paste0("var ", varname, " = ['", lis2[j, path2], "',"), file = outjs, append = T)
} else if( j == nrow(lis2)) {
write(paste0("'", lis2[j, path2], "']\n"), file = outjs, append = T)
} else {
write(paste0("'", lis2[j, path2], "',"), file = outjs, append = T)
}
}
}
}
lis
files <- lis[!dir %like% "Stop"]$path
all <- data.table()
for (i in 1:length(files)) {
print(files[i])
route <- data.table(readGPX(files[i])$tracks[[1]][[1]])
route[, file := files[i]]
route[, dist := 0]
route[, extensions:=NULL]
route[2:nrow(route), dist := distHaversine(route[,.(lon, lat)])/1000]
all <- rbind(all, route)
}
all[, time2 := strptime(substr(time, 1, 10), format = "%Y-%m-%d")]
all[, ele2 := ele-shift(ele)]
all[, ele2type := "Ascent"]
all[ele2<=0, ele2type := "Descent"]
all
all[, distfs := cumsum(dist)]
files
all <- data.table()
i=1
print(files[i])
route <- data.table(readGPX(files[i])$tracks[[1]][[1]])
files[i]
readGPX(files[i])
files[i]
i=2
readGPX(files[i])
i
files[i]
files[1]
files
i=70
readGPX(files[i])
i=1
readGPX(files[i])
readGPX(files[i])
readGPX(files[i])
all <- data.table()
for (i in 1:length(files)) {
print(files[i])
route <- data.table(readGPX(files[i])$tracks[[1]][[1]])
route[, file := files[i]]
route[, dist := 0]
route[, extensions:=NULL]
route[2:nrow(route), dist := distHaversine(route[,.(lon, lat)])/1000]
all <- rbind(all, route)
}
all[, ele := as.numeric(ele)]
all[, time2 := strptime(substr(time, 1, 10), format = "%Y-%m-%d")]
all[, ele2 := ele-shift(ele)]
all[, ele2type := "Ascent"]
all[ele2<=0, ele2type := "Descent"]
all
all[, distfs := cumsum(dist)]
all
distanceTT <- round(sum(all$dist, na.rm = T))
distanceTT
daysTT <- as.numeric(round(max(all$time2)-min(all$time2)))
daysTT
daysBike <- length(unique(all$time2))
daysBike
TTa <- sum(all[ele2type == "Ascent"]$ele2, na.rm = T)
TTa
TTb <- sum(all[ele2type == "Descent"]$ele2, na.rm = T)
TTb
# create plots
b <- ggplot(all, aes(time2, dist))+stat_summary(fun = "sum", geom = "bar")+xlab("Date")+ylab("Distance (km)")+labs(title="Distance per day")+theme(text = element_text(size =15))+scale_y_continuous(sec.axis=dup_axis())
c <- ggplot(all, aes(time2, ele2))+stat_summary(aes(fill=ele2type),fun = "sum", geom = "bar")+xlab("Date")+ylab("Elevation (m)")+labs(title="Ascent and descent per day")+theme(text = element_text(size =15))+scale_y_continuous(sec.axis=dup_axis())
a <- ggplot(all, aes(distfs, ele))+geom_line()+ylab("Altitude (m)")+xlab("Distance (km)")+labs(title="Elevation profile for the bike trip")+theme(text = element_text(size =15))+scale_y_continuous(sec.axis=dup_axis())
a
printfast(a, "Elevation.jpg", 300,1200, wdfunction = "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/picture/BikeTrip2022")
printfast(b, "Distance.jpg", 300,1200, wdfunction = "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/picture/BikeTrip2022")
printfast(c, "Ascent.jpg", 300,1200, wdfunction = "C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/picture/BikeTrip2022")
info <- data.table(What=c("Distance total (km)",
"Days spent on the bike",
"Days gone",
"Total ascent (m)",
"Total descent (m)"), value = c(distanceTT,
daysBike,
daysTT,
TTa,
TTb))
info[, value := round(value)]
info
png("C:/Users/doria/Downloads/GitHub/dorian.gravier.github.io/files/picture/BikeTrip2022/Info.png", height = 300, width = 500, bg = "#424242")
grid.table(info, theme=ttheme_minimal(base_colour="#f0e3cb", base_size = 20), rows=rep("", nrow(info)))
# formattable(info)
dev.off()
